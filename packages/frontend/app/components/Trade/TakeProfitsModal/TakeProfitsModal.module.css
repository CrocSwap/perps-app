.container {
    --container-width: 439px;
    --input-height: 36px;

    width: var(--container-width);
    padding: var(--padding-s) var(--padding-m) var(--padding-m) var(--padding-m);
    display: flex;
    flex-direction: column;
    gap: var(--gap-m);
}

.infoContainer {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: var(--gap-s);
    font-size: var(--font-size-s);
}
.infoItem {
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}
.label {
    color: var(--text2);
}
.value {
    color: var(--text1);
}

.formContainer {
    display: flex;
    flex-direction: column;
    gap: var(--gap-s);
}
.formRow {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--gap-s);
}

.inputWithDropdown,
.inputWithoutDropdown {
    width: 100%;
    height: var(--input-height);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    background: var(--bg-dark4);
    height: var(--input-height);
    padding: var(--padding-xs) var(--padding-s);
    border-radius: var(--radius-s);
}
.inputWithoutDropdown {
    display: flex;
    align-items: center;
    gap: var(--gap-s);
    justify-content: flex-start;
    background: var(--bg-dark4);
}

.formRow label {
    margin: 0;
    white-space: nowrap;
    color: var(--text2);
    /* font-size: var(--font-size-m); */
}

.inputWithoutDropdown input,
.inputWithDropdown input {
    flex: 1 1 0;
    min-width: 0;
    width: auto;
    background: transparent;
    text-align: right;
}
.formRow input {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: flex-start;
    gap: var(--gap-s);
    background: var(--bg-dark4);

    font-size: var(--font-size-s);
    color: var(--text1);
    outline: none;
    border: none;
}
.formRow input::placeholder {
    color: var(--text2);
}

.inputWithDropdown button {
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 40px;
    gap: var(--gap-s);
    background-color: transparent;
    outline: none;
    border: none;
    color: var(--text1);
}
.toggleContainer {
    display: flex;
    flex-direction: column;
    gap: var(--gap-s);
    justify-content: flex-start;
    align-items: flex-start;
}
.confirmButton {
    display: flex;
    padding: var(--button-padding);
    height: var(--button-height);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-self: stretch;

    outline: none;
    border: none;

    border-radius: var(--radius-s);
    background: var(--accent1, #7371fc);
    color: var(--text1, #f0f0f8);
    font-size: var(--font-size-m);
    transition: all 0.3s ease-in-out;
}
.disabled {
    /* disbaled is dark3  in figma but that's the same as the modal bg */
    background: var(--bg-dark2);
    color: var(--text2);
    pointer-events: none;
}
.textInfo {
    display: flex;
    flex-direction: column;
    gap: var(--gap-s);
    color: var(--text2);
    font-size: var(--font-size-s);
}
.expectedProfitContainer {
    height: 15px;
}
.expectedProfitText {
    width: 100%;
    display: flex;
    justify-content: flex-end;
    color: var(--text2);
    font-size: var(--font-size-s);
    min-height: 16px;
    align-items: center;
}
.formContainer input[type='number']::-webkit-outer-spin-button,
.formContainer input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.formContainer input[type='number'] {
    -moz-appearance: textfield;
}
.validationError {
    color: var(--red);
    margin-left: 6px;
    font-size: var(--font-size-s);
}

/* .fieldError {
    outline: 1px solid var(--sell);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--sell) 20%, transparent);
    border-radius: var(--radius-s);
} */

/* .fieldWarning {
    outline: 1px solid var(--red);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--red) 20%, transparent);
    border-radius: var(--radius-s);
} */

.warningText {
    color: var(--red,);

    font-size: var(--font-size-s);
}

.expectedLossText {
    width: 100%;
    display: flex;
    justify-content: flex-end;
    color: var(--text2);
    font-size: var(--font-size-s);
    min-height: 16px;
    align-items: center;
}
.warningContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: var(--gap-xs);
}
.amountReadout {
    width: 100%;
    font-size: var(--font-size-s);
    text-align: right;
    color: var(--green);
}
