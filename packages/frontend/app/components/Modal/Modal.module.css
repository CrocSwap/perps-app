/* ========= Overlay (fixed to viewport, with blur) ========= */
.outside_modal {
    position: fixed;
    inset: 0;
    width: 100vw;
    height: 100dvh;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    /* Blur the whole app behind */
    background: rgba(0, 0, 0, 0.01); /* tiny alpha helps iOS render the blur */
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);

    z-index: 2147483647; /* above everything in the app */
    transform: translateZ(0); /* force its own layer (iOS) */
    -webkit-transform: translateZ(0);
    will-change: transform;

    overflow: hidden;
    overscroll-behavior: none;
    color: var(--text1);
}

/* Special styling when keyboard is visible (if you use it via className) */
.keyboardVisible {
    height: auto !important;
    bottom: 0;
}

/* ------- Header row used inside center & bottom sheet ------- */
.outside_modal header {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--padding-s) var(--padding-m) var(--padding-m) var(--padding-m);
}
.outside_modal header h3 {
    font-size: var(--font-size-l, 24px);
}
.outside_modal header svg {
    cursor: pointer;
}
.outside_modal header svg:hover {
    fill: var(--text1);
}

/* ============= Bottom Sheet container modifier ============= */
.bottomSheetContainer {
    justify-content: flex-end !important;
    padding: 0 !important;
    background: transparent !important;
}

/* The actual bottom sheet */
.bottomSheet {
    border-radius: var(--radius-m) 16px 0 0;
    background: var(--bg-dark3, #1c1c22);
    box-shadow: 0px 0px 40px 0px rgba(6, 6, 12, 0.5);
    width: 100%;
    max-height: 85dvh;
    padding-bottom: env(safe-area-inset-bottom, 16px);
    overflow-y: auto;
    transform: translateY(100%);
    transition: transform 0.3s ease-out;
    overscroll-behavior: contain;
    margin-bottom: -1px;
}

.keyboardActive {
    max-height: 70dvh;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    transition: none !important;
    transform: translateY(0) !important;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
}

/* Grippy handle */
.bottomSheetHandle {
    width: 100%;
    display: flex;
    justify-content: center;
    padding: 10px 0;
    cursor: grab;
    touch-action: none;
}
.bottomSheetHandle:active {
    cursor: grabbing;
}
.dragging {
    cursor: grabbing;
}
.handle {
    width: 36px;
    height: 4px;
    background-color: #666;
    border-radius: 2px;
}

/* Animations */
.slideUp {
    transform: translateY(0);
}
.slideDown {
    transform: translateY(100%);
}

/* ============= Centered modal content ============= */
.centerModal {
    flex-shrink: 0;
    border-radius: var(--radius-m);
    background: var(--bg-dark3, #1c1c22);
    box-shadow: 0px 0px 40px 0px rgba(6, 6, 12, 0.5);
    max-width: 90vw;
    max-height: 90dvh;
}

/* Shared content area */
.modalContent input,
.modalContent textarea {
    font-size: 16px !important; /* prevent iOS zoom */
    outline: none;
}

/* iOS tweaks */
@supports (-webkit-touch-callout: none) {
    .keyboardActive {
        position: absolute;
        top: auto;
        bottom: 0;
        max-height: unset;
        overscroll-behavior: none;
    }
    .keyboardVisible .bottomSheet {
        max-height: 50vh !important;
    }
}

@media (max-width: 768px) {
    .safeAreaSpacer {
        height: calc(env(safe-area-inset-bottom, 16px) + 16px);
    }
    .keyboardActive .safeAreaSpacer {
        height: calc(env(safe-area-inset-bottom, 16px) + 36px);
    }
    @supports not (padding-bottom: env(safe-area-inset-bottom)) {
        .bottomSheet {
            padding-bottom: var(--padding-m);
        }
        .safeAreaSpacer {
            height: 32px;
        }
        .keyboardActive .safeAreaSpacer {
            height: 48px;
        }
    }
}

/* Optional: bottom-right variant keeps your spacing */
.bottomRightContainer {
    justify-content: flex-end !important;
    align-items: flex-end !important;
    padding: var(--padding-m) !important;
}
